# Dockerfile.flink â€” copies JDK into /opt/java/openjdk so native builds find headers
FROM flink:1.16-scala_2.12

USER root
WORKDIR /opt

# Copy plugin jars (ensure ./flink/plugins exists via flink/plugins-download.sh before build)
COPY flink/plugins/ /opt/flink/plugins/

# Copy python requirements into image
COPY requirements.txt /tmp/requirements.txt

# Install system deps and JDK, then copy JDK files into /opt/java/openjdk (safe for build scripts)
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
      ca-certificates curl git build-essential pkg-config \
      python3 python3-dev python3-pip \
      libssl-dev libffi-dev libpq-dev \
      openjdk-11-jdk-headless && \
    # locate installed JDK directory robustly and copy into /opt/java/openjdk
    set -eux; \
    CANDIDATES="$(ls -d /usr/lib/jvm/java-* 2>/dev/null || true) $(ls -d /usr/lib/jvm/*openjdk* 2>/dev/null || true)"; \
    JAVA_HOME_PATH=""; \
    for c in $CANDIDATES; do \
      if [ -d "$c/include" ]; then JAVA_HOME_PATH="$c"; fi; \
    done; \
    if [ -z "$JAVA_HOME_PATH" ]; then \
      echo "ERROR: couldn't find JDK include directory under /usr/lib/jvm; listing contents:"; ls -la /usr/lib/jvm || true; exit 1; \
    fi; \
    echo "Found JDK at: $JAVA_HOME_PATH"; \
    # copy the JDK into /opt/java/openjdk so pemja and similar find /opt/java/openjdk/include
    rm -rf /opt/java || true; \
    mkdir -p /opt/java; \
    cp -a "$JAVA_HOME_PATH" /opt/java/openjdk; \
    # verify the include directory exists exactly where expected
    test -d /opt/java/openjdk/include && ls -la /opt/java/openjdk/include; \
    # set JAVA_HOME env permanently for image (helps build scripts and runtime)
    export JAVA_HOME=/opt/java/openjdk; \
    # upgrade pip tooling & install Python deps
    pip3 install --upgrade pip setuptools wheel && \
    pip3 install --no-cache-dir -r /tmp/requirements.txt && \
    # cleanup apt caches and temp files
    rm -rf /var/lib/apt/lists/* /tmp/requirements.txt

# Ensure user classpath/usrlib contains plugin jars (Flink will pick these up)
RUN mkdir -p /opt/flink/usrlib
RUN cp -r /opt/flink/plugins/* /opt/flink/usrlib/ || true

# Export JAVA_HOME for containers using this image
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH=$JAVA_HOME/bin:$PATH

USER flink
WORKDIR /opt/flink
