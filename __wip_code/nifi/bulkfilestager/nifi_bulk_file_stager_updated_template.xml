<?xml version="1.0" encoding="UTF-8"?>
<!--
  NiFi Template (updated) - Bulk-File-Stager Process Group
  Confirmed chunking default and manifest structure. Default chunk size = 50000 (tunable).
-->
<template encoding-version="1.0">
  <name>Bulk-File-Stager-Updated</name>
  <description>Updated scaffold NiFi template: ListS3 -> RouteOnAttribute (large) -> FetchS3 -> PutS3(Stage) -> SplitRecord (chunk size configurable) -> PutS3(chunk) -> GenerateManifest -> PublishPulsar -> InvokeHTTP(Airflow trigger)</description>
  <snippet>
    <groupId>bulk-file-stager-group</groupId>
    <processors>

      <processor>
        <id>proc-lists3-bulk</id>
        <name>ListS3</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-standard-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Bucket">s3://your-landing-bucket/</property>
          <property name="Prefix">incoming/bulk/</property>
          <property name="Region">ap-south-1</property>
          <property name="Polling Interval">1 min</property>
          <property name="Minimum Object Age">60 sec</property>
          <property name="Batch Size">10</property>
          <property name="Max Keys">100</property>
          <property name="credentials">aws-credentials-provider</property>
        </properties>
      </processor>

      <processor>
        <id>proc-route-size</id>
        <name>RouteOnAttribute</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-standard-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Routes">large: ${s3.object.size:gt(50000000)}; small: ${s3.object.size:le(50000000)}</property>
        </properties>
      </processor>

      <processor>
        <id>proc-fetchs3-bulk</id>
        <name>FetchS3Object</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-standard-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Bucket">${s3.bucket}</property>
          <property name="Key">${s3.object.key}</property>
          <property name="credentials">aws-credentials-provider</property>
        </properties>
      </processor>

      <processor>
        <id>proc-putstage</id>
        <name>PutS3Object (Stage)</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-standard-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Bucket">s3://your-stage-bucket/bulk/</property>
          <property name="Region">ap-south-1</property>
          <property name="Credentials">aws-credentials-provider</property>
          <property name="Object Key">${filename}</property>
        </properties>
      </processor>

      <processor>
        <id>proc-split-chunks</id>
        <name>SplitRecord (Chunk)</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-record-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Record Reader">AutoDetectReader</property>
          <property name="Record Writer">JsonRecordSetWriter</property>
          <property name="Record Count">${chunk.size:toNumber():orElse(50000)}</property>
        </properties>
      </processor>

      <processor>
        <id>proc-put-chunk</id>
        <name>PutS3Object (Chunk)</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-standard-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Bucket">s3://your-stage-bucket/bulk/chunks/</property>
          <property name="Region">ap-south-1</property>
          <property name="Credentials">aws-credentials-provider</property>
          <property name="Object Key">${filename:substringBeforeLast('.')}-${uuid()}.json</property>
        </properties>
      </processor>

      <processor>
        <id>proc-generate-manifest</id>
        <name>GenerateFlowFile</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-standard-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Custom Text">{"manifest_path":"${s3.stage.path}","chunk_paths":"${chunk.paths}","chunkCount":"${chunk.count}","rows":"${s3.object.rowcount}","checksum":"${file.checksum:orElse('')}","correlation_id":"${filename}-${now():toNumber()}"}"</property>
        </properties>
      </processor>

      <processor>
        <id>proc-publish-manifest</id>
        <name>PublishPulsar</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-pulsar-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Service">PulsarClientService</property>
          <property name="Topic">persistent://public/default/files.manifests</property>
          <property name="Record Writer">JsonRecordSetWriter</property>
          <property name="Message Key">${correlation_id}</property>
          <property name="Batching">true</property>
          <property name="Batch Size">10</property>
        </properties>
      </processor>

      <processor>
        <id>proc-invoke-airflow</id>
        <name>InvokeHTTP (Airflow Trigger)</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-standard-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="HTTP Method">POST</property>
          <property name="Remote URL">http://airflow-webserver:8080/api/v1/dags/bulk_ingest/dagRuns</property>
          <property name="Content-Type">application/json</property>
          <property name="Payload">{"conf":{"manifest_path":"${s3.stage.path}","correlation_id":"${correlation_id}"}}</property>
          <property name="SSL Context Service">StandardSSLContextService</property>
        </properties>
      </processor>

      <processor>
        <id>proc-dlq-bulk</id>
        <name>PublishPulsar (DLQ)</name>
        <bundle>
          <group>org.apache.nifi</group>
          <artifact>nifi-pulsar-nar</artifact>
          <version>1.x</version>
        </bundle>
        <properties>
          <property name="Service">PulsarClientService</property>
          <property name="Topic">persistent://public/default/ingest.dlq</property>
          <property name="Record Writer">JsonRecordSetWriter</property>
        </properties>
      </processor>

    </processors>

    <controllerServices>
      <controllerService>
        <id>aws-credentials-provider</id>
        <name>AWS Credentials Provider Service</name>
        <class>org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService</class>
        <properties>
          <property name="Access Key">YOUR_AWS_ACCESS_KEY</property>
          <property name="Secret Key">YOUR_AWS_SECRET_KEY</property>
        </properties>
      </controllerService>

      <controllerService>
        <id>pulsar-client-service</id>
        <name>PulsarClientService</name>
        <class>org.apache.nifi.pulsar.services.PulsarClientService</class>
        <properties>
          <property name="Service URL">pulsar://pulsar-broker:6650</property>
          <property name="Admin URL">http://pulsar-broker:8080</property>
        </properties>
      </controllerService>

      <controllerService>
        <id>JsonRecordSetWriter</id>
        <name>JsonRecordSetWriter</name>
        <class>org.apache.nifi.json.JsonRecordSetWriter</class>
        <properties>
          <property name="Schema Access Strategy">Use 'Schema Name' property</property>
          <property name="Schema Name">bulk-manifest-schema</property>
        </properties>
      </controllerService>

      <controllerService>
        <id>AutoDetectReader</id>
        <name>AutoDetectReader</name>
        <class>org.apache.nifi.csv.AutoDetectReader</class>
        <properties>
          <property name="Schema Access Strategy">Infer Schema</property>
        </properties>
      </controllerService>

      <controllerService>
        <id>StandardSSLContextService</id>
        <name>StandardSSLContextService</name>
        <class>org.apache.nifi.ssl.StandardSSLContextService</class>
        <properties>
          <property name="SSL Protocol">TLS</property>
        </properties>
      </controllerService>

    </controllerServices>

    <connections>
      <connection>
        <id>c1</id>
        <sourceId>proc-lists3-bulk</sourceId>
        <destinationId>proc-route-size</destinationId>
        <relationship>success</relationship>
      </connection>

      <connection>
        <id>c2</id>
        <sourceId>proc-route-size</sourceId>
        <destinationId>proc-fetchs3-bulk</destinationId>
        <relationship>large</relationship>
      </connection>

      <connection>
        <id>c3</id>
        <sourceId>proc-fetchs3-bulk</sourceId>
        <destinationId>proc-putstage</destinationId>
        <relationship>success</relationship>
      </connection>

      <connection>
        <id>c4</id>
        <sourceId>proc-putstage</sourceId>
        <destinationId>proc-split-chunks</destinationId>
        <relationship>success</relationship>
      </connection>

      <connection>
        <id>c5</id>
        <sourceId>proc-split-chunks</sourceId>
        <destinationId>proc-put-chunk</destinationId>
        <relationship>success</relationship>
      </connection>

      <connection>
        <id>c6</id>
        <sourceId>proc-put-chunk</sourceId>
        <destinationId>proc-generate-manifest</destinationId>
        <relationship>success</relationship>
      </connection>

      <connection>
        <id>c7</id>
        <sourceId>proc-generate-manifest</sourceId>
        <destinationId>proc-publish-manifest</destinationId>
        <relationship>success</relationship>
      </connection>

      <connection>
        <id>c8</id>
        <sourceId>proc-publish-manifest</sourceId>
        <destinationId>proc-invoke-airflow</destinationId>
        <relationship>success</relationship>
      </connection>

      <connection>
        <id>c9</id>
        <sourceId>proc-any</sourceId>
        <destinationId>proc-dlq-bulk</destinationId>
        <relationship>failure</relationship>
      </connection>

    </connections>

    <funnels/>
    <labels/>
  </snippet>
</template>
